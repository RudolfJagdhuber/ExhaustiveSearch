// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ExhaustiveSearchCpp
Rcpp::List ExhaustiveSearchCpp(std::vector<double>& XInput, std::vector<double>& yInput, unsigned int XRows, unsigned int XCols, size_t combsUpTo, size_t nResults, size_t nThreads);
RcppExport SEXP _ExhaustiveSearch_ExhaustiveSearchCpp(SEXP XInputSEXP, SEXP yInputSEXP, SEXP XRowsSEXP, SEXP XColsSEXP, SEXP combsUpToSEXP, SEXP nResultsSEXP, SEXP nThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double>& >::type XInput(XInputSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type yInput(yInputSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type XRows(XRowsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type XCols(XColsSEXP);
    Rcpp::traits::input_parameter< size_t >::type combsUpTo(combsUpToSEXP);
    Rcpp::traits::input_parameter< size_t >::type nResults(nResultsSEXP);
    Rcpp::traits::input_parameter< size_t >::type nThreads(nThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(ExhaustiveSearchCpp(XInput, yInput, XRows, XCols, combsUpTo, nResults, nThreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ExhaustiveSearch_ExhaustiveSearchCpp", (DL_FUNC) &_ExhaustiveSearch_ExhaustiveSearchCpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_ExhaustiveSearch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
